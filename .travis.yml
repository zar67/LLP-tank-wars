# .travis.yml

# safelist
branches:
  only:
  - master
  - stable
  - /^(?i:develop)$|(?i:developer)$|(?i:Dev)$|(?i:Development)$

os: linux
language: cpp
git:
  depth: 5

cache:
  - directories:
      - ~/.cache/apt # This must be accessible for non-root users

jobs:
  include:

    # Code Style
    - os: linux
      name: "CODE::STYLE"
      dist: bionic
      compiler: clang-format-10
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-format-10
      env:
        - MATRIX_EVAL="CC=clang-10 && CXX=/usr/bin/clang++-10"

      before_install:
        - chmod +x ${TRAVIS_BUILD_DIR}/.travis.cache && sudo ${TRAVIS_BUILD_DIR}/.travis.cache --load

      install:
        - ${TRAVIS_BUILD_DIR}/.travis.cache --save

      before_script:
        - wget https://raw.githubusercontent.com/Sarcasm/run-clang-format/master/run-clang-format.py
        - chmod +x run-clang-format.py

      script:
        - ./run-clang-format.py --clang-format-executable /usr/bin/clang-format-10 -r source apps include

    # Linux GCC Build
    - os: linux
      name: "CODE::BUILD"
      dist: bionic
      compiler: clang-10
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: 'deb https://apt.kitware.com/ubuntu/ bionic main'
              key_url: 'https://apt.kitware.com/keys/kitware-archive-latest.asc'
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - libstdc++6
            - clang-10
            - clang-format-10
            - clang-tidy-10
            - llvm-10-dev
      env:
        - MATRIX_EVAL="CC=clang-10 && CXX=clang++-10"
        - CC=clang-10
        - CXX=clang++-10

      before_install:
        #- sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100
        #- sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100
        - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 100
        - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-10 100
        - chmod +x ${TRAVIS_BUILD_DIR}/.travis.cache && sudo ${TRAVIS_BUILD_DIR}/.travis.cache --load

      install:
        - sudo apt-get install -y --no-install-recommends --no-install-suggests
          libtbb-dev libharfbuzz-bin libharfbuzz-dev libxrandr-dev
          libxi-dev libxinerama-dev libxcursor-dev libgl1-mesa-dev libglu1-mesa-dev
        - sudo snap install cppcheck && sudo ln -s /snap/bin/cppcheck /usr/bin/cppcheck
        - ${TRAVIS_BUILD_DIR}/.travis.cache --save

      before_script:
        - cmake -H. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -Bbuild
        - /usr/bin/cppcheck --quiet --platform=unix64
          --enable=warning,style,performance,portability
          --template='{file}:{line}:{severity},{id},{message}'
          --error-exitcode=1 --force --inline-suppr --suppressions-list=.cppcheck
          --std=c++17 --language=c++ -i_deps -iCMakeFiles .

      script:
        - cmake --build build

before_install:
  - eval "${MATRIX_EVAL}"


